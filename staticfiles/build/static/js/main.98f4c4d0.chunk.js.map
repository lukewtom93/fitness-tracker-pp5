{"version":3,"sources":["constants.js","api/axiosDefaults.js","components/LoadingIndicator.js","components/Form.js","pages/login.js","pages/register.js","pages/home.js","pages/notFound.js","components/ProtectedRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["ACCESS_TOKEN","REFRESH_TOKEN","api","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","LoadingIndicator","_jsx","className","children","Form","_ref","route","method","username","setUsername","useState","password","setPassword","loading","setLoading","navigate","useNavigate","name","_jsxs","onSubmit","async","e","preventDefault","res","post","setItem","data","access","refresh","alert","type","value","onChange","target","placeholder","login","register","Home","setData","entries","setEntries","food","setFood","calories","setCalories","useEffect","response","fetch","ok","Error","result","json","console","fetchData","totalCalories","reduce","total","entry","onClick","handleAddEntry","parseInt","length","map","index","updatedEntries","filter","_","i","handleDeleteEntry","notFound","ProtectedRoute","isAuthorized","setIsAuthorized","refreshToken","useCallback","status","log","auth","jwt_decode","exp","Date","now","catch","NavLink","to","Logout","clear","Navigate","RegisterAndLogout","Register","App","BrowserRouter","Routes","Route","path","element","Login","NotFound","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98f4c4d0.chunk.js","sourcesContent":["export const ACCESS_TOKEN = 'access';\r\nexport const REFRESH_TOKEN = 'refresh';","import axios from 'axios';\r\nimport { ACCESS_TOKEN } from '../constants';\r\n\r\nconst api = axios.create({\r\n    baseURL: '/api',\r\n});\r\n\r\napi.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem(ACCESS_TOKEN);\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default api;","import '../styles/LoadingIndicator.css';\r\n\r\nconst LoadingIndicator = () => {\r\n  return (\r\n    <div className=\"loading-containerr\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingIndicator;","import { useState } from \"react\";\r\nimport api from \"../api/axiosDefaults\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from \"../constants\";\r\nimport LoadingIndicator from \"./LoadingIndicator\";\r\n\r\n\r\nfunction Form({route, method}) {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const name = method === \"login\" ? \"Login\" : \"Register\";\r\n\r\n    const handleSubmit = async (e) => {\r\n        setLoading(true);\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const res = await api.post(route, { username, password })\r\n            if (method === \"login\") {\r\n                localStorage.setItem(ACCESS_TOKEN, res.data.access);\r\n                localStorage.setItem(REFRESH_TOKEN, res.data.refresh);\r\n                navigate(\"/\")\r\n            } else {\r\n                navigate(\"/login\")\r\n            }\r\n        } catch (error) {\r\n            alert(error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    };\r\n\r\n    return <form onSubmit={handleSubmit} className=\"form-container\">\r\n        <h1>{name}</h1>\r\n        <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Username\"\r\n        />\r\n        <input\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Password\"\r\n        />\r\n        {loading && <LoadingIndicator />}\r\n        <button className=\"form-button\" type=\"submit\">\r\n            {name}\r\n        </button>\r\n    </form>\r\n};\r\n\r\nexport default Form;","import Form from \"../components/Form\"\r\n\r\nfunction login() {\r\n  return (\r\n    <Form route=\"/api/token/\" method=\"login\" />\r\n  )\r\n}\r\n\r\nexport default login","import Form from \"../components/Form\"\r\n\r\nfunction register() {\r\n  return (\r\n    <Form route=\"/api/profile/register/\" method=\"register\" />\r\n  )\r\n\r\n}\r\n\r\nexport default register","import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction Home() {\r\n    const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [entries, setEntries] = useState([]);\r\n  const [food, setFood] = useState(\"\");\r\n  const [calories, setCalories] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\"/api/data\");\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        const result = await response.json();\r\n        setData(result);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleAddEntry = () => {\r\n    if (food && calories) {\r\n      setEntries([...entries, { food, calories: parseInt(calories) }]);\r\n      setFood(\"\");\r\n      setCalories(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteEntry = (index) => {\r\n    const updatedEntries = entries.filter((_, i) => i !== index);\r\n    setEntries(updatedEntries);\r\n  };\r\n\r\n  const totalCalories = entries.reduce((total, entry) => total + entry.calories, 0);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center mb-4\">Calorie Tracker</h1>\r\n\r\n      {/* Input Form */}\r\n      <div className=\"card p-4 mb-4\">\r\n        <div className=\"row g-3\">\r\n          <div className=\"col-md-6\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Food Item\"\r\n              value={food}\r\n              onChange={(e) => setFood(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Calories\"\r\n              value={calories}\r\n              onChange={(e) => setCalories(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <button className=\"btn btn-primary w-100\" onClick={handleAddEntry}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Calorie Entries */}\r\n      <div className=\"card p-4\">\r\n        <h3 className=\"mb-3\">Calorie Entries</h3>\r\n        {entries.length > 0 ? (\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Food</th>\r\n                <th>Calories</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {entries.map((entry, index) => (\r\n                <tr key={index}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{entry.food}</td>\r\n                  <td>{entry.calories}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-danger btn-sm\"\r\n                      onClick={() => handleDeleteEntry(index)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p className=\"text-muted\">No entries yet. Add some food items!</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Total Calories */}\r\n      <div className=\"mt-4 text-center\">\r\n        <h4>Total Calories: {totalCalories}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","function notFound() {\r\n    return <div>\r\n        <h1>404 Not Found</h1>\r\n        <p>The page you're looking for doesn't exist!</p>\r\n    </div>\r\n  }\r\n  \r\n  export default notFound","import { NavLink } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport api from \"../api/axiosDefaults\";\r\nimport { REFRESH_TOKEN, ACCESS_TOKEN } from \"../constants\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\n\r\nfunction ProtectedRoute({ children }) {\r\n    const [isAuthorized, setIsAuthorized] = useState(null);\r\n\r\n    const refreshToken = useCallback(async () => {\r\n        const refreshToken = localStorage.getItem(REFRESH_TOKEN);\r\n        try {\r\n            const res = await api.post(\"/api/token/refresh/\", {\r\n                refresh: refreshToken,\r\n            });\r\n            if (res.status === 200) {\r\n                localStorage.setItem(ACCESS_TOKEN, res.data.access);\r\n                setIsAuthorized(true);\r\n            } else {\r\n                setIsAuthorized(false);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setIsAuthorized(false);\r\n        }\r\n    }, []);\r\n\r\n    const auth = useCallback(async () => {\r\n        const token = localStorage.getItem(ACCESS_TOKEN);\r\n        if (!token) {\r\n            setIsAuthorized(false);\r\n            return;\r\n        }\r\n        const decoded = jwt_decode(token);\r\n        const tokenExpiration = decoded.exp;\r\n        const now = Date.now() / 1000;\r\n\r\n        if (tokenExpiration < now) {\r\n            await refreshToken();\r\n        } else {\r\n            setIsAuthorized(true);\r\n        }\r\n    }, [refreshToken]);\r\n\r\n    useEffect(() => {\r\n        auth().catch(() => setIsAuthorized(false));\r\n    }, [auth]);\r\n\r\n    if (isAuthorized === null) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return isAuthorized ? children : <NavLink to=\"/login\" />;\r\n}\r\n\r\nexport default ProtectedRoute;","\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\"\nimport Login from \"./pages/login\"\nimport Register from \"./pages/register\"\nimport Home from \"./pages/home\"\n\nimport NotFound from \"./pages/notFound\"\nimport ProtectedRoute from \"./components/ProtectedRoutes\"\n\nfunction Logout() {\n  localStorage.clear()\n  return <Navigate to=\"/login\" />\n}\n\nfunction RegisterAndLogout() {\n  localStorage.clear()\n  return <Register />\n}\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <ProtectedRoute>\n              <Home />\n            </ProtectedRoute>\n          }\n        />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/logout\" element={<Logout />} />\n        <Route path=\"/register\" element={<RegisterAndLogout />} />\n        <Route path=\"*\" element={<NotFound />}></Route>\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}